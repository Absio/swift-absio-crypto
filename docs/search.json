{"Structs/KeyError.html#/s:14AbsioCryptoiOS8KeyErrorV3msgSSvp":{"name":"msg","abstract":"<p>Text representation of given error.</p>","parent_name":"KeyError"},"Structs/KeyError.html":{"name":"KeyError","abstract":"<p>Key generation/parcing error</p>"},"Enums/KeyFileSettings.html#/s:14AbsioCryptoiOS15KeyFileSettingsO9VERSION_1yA2CmF":{"name":"VERSION_1","abstract":"<p>Default version 1</p>","parent_name":"KeyFileSettings"},"Enums/KeyFileSettings.html#/s:14AbsioCryptoiOS15KeyFileSettingsO20getDefaultSaltLengthSiyF":{"name":"getDefaultSaltLength()","abstract":"<p>Get the default salt length to use for the PBKDF2 of the KeyRing to encrypt/decrypt a key file.</p>","parent_name":"KeyFileSettings"},"Enums/KeyFileSettings.html#/s:14AbsioCryptoiOS15KeyFileSettingsO18getCipherAlgorithmAA3AESC0I0OyF":{"name":"getCipherAlgorithm()","abstract":"<p>Get the AES.Algorithm to use in Cipher for the PBKDF2 of the KeyRing to encrypt/decrypt a key file.</p>","parent_name":"KeyFileSettings"},"Enums/KeyFileSettings.html#/s:14AbsioCryptoiOS15KeyFileSettingsO03getD8StrengthAA3AESC0D8StrenghtOyF":{"name":"getKeyStrength()","abstract":"<p>Get the AES.KeyStrength to use for the PBKDF2 of the KeyRing to encrypt/decrypt a key file.</p>","parent_name":"KeyFileSettings"},"Enums/KeyFileSettings.html#/s:14AbsioCryptoiOS15KeyFileSettingsO13getIterationsSiyF":{"name":"getIterations()","abstract":"<p>Get the iterations to use for the PBKDF2 of the KeyRing to encrypt/decrypt a key file.</p>","parent_name":"KeyFileSettings"},"Enums/KeyFileSettings.html#/s:14AbsioCryptoiOS15KeyFileSettingsO16getHashAlgorithmAA0H0OyF":{"name":"getHashAlgorithm()","abstract":"<p>Get the Hash  algorithm to use for the PBKDF2 of the KeyRing to encrypt/decrypt a key file.</p>","parent_name":"KeyFileSettings"},"Enums/KeyFileSettings.html#/s:14AbsioCryptoiOS15KeyFileSettingsO03getF07versionACs6UInt64V_tKFZ":{"name":"getSettings(version:)","abstract":"<p>Get KeyFile setting by passing version number</p>","parent_name":"KeyFileSettings"},"Enums/KeyFileSettingsError.html#/s:14AbsioCryptoiOS20KeyFileSettingsErrorO11descriptionSSvp":{"name":"description","abstract":"<p>Description of thrown error</p>","parent_name":"KeyFileSettingsError"},"Enums/Hash.html#/s:14AbsioCryptoiOS4HashO5ErrorO":{"name":"Error","abstract":"<p>Hashing error</p>","parent_name":"Hash"},"Enums/Hash.html#/s:14AbsioCryptoiOS4HashO7perform2onSays5UInt8VG10Foundation4DataV_tKF":{"name":"perform(on:)","abstract":"<p>Perform the digest of the data (the hash) using defined algorithm.</p>","parent_name":"Hash"},"Enums/ECKeyGenarator.html#/s:14AbsioCryptoiOS14ECKeyGenaratorO4p384yA2CmF":{"name":"p384","abstract":"<p>P384 Curve</p>","parent_name":"ECKeyGenarator"},"Enums/ECKeyGenarator.html#/s:14AbsioCryptoiOS14ECKeyGenaratorO18generatePrivateKeyAA09ECPrivateH0CyKF":{"name":"generatePrivateKey()","abstract":"<p>Generate private EC key.</p>","parent_name":"ECKeyGenarator"},"Enums/ECKeyGenarator.html#/s:14AbsioCryptoiOS14ECKeyGenaratorO25generateIndexedPrivateKey5indexAA0g9ECPrivateI0CSi_tKF":{"name":"generateIndexedPrivateKey(index:)","abstract":"<p>Generate private EC key with index.</p>","parent_name":"ECKeyGenarator"},"Enums/ECKeyGenarator.html":{"name":"ECKeyGenarator","abstract":"<p>EC key generator helper. The default Absio curve is P384.</p>"},"Enums/Hash.html":{"name":"Hash","abstract":"<p>This enumeration represents the message digest algorithms that Absio knowingly supports.</p>"},"Enums/KeyFileSettingsError.html":{"name":"KeyFileSettingsError","abstract":"<p>KeyFile settings errors</p>"},"Enums/KeyFileSettings.html":{"name":"KeyFileSettings","abstract":"<p>This enumeration represents the specification for performing PBKDF2 Key File encoding for a KeyRing</p>"},"Classes/ECDSA.html#/s:14AbsioCryptoiOS5ECDSAC10ECDSAErrorO":{"name":"ECDSAError","abstract":"<p>Errors for ECDSA</p>","parent_name":"ECDSA"},"Classes/ECDSA.html#/s:14AbsioCryptoiOS5ECDSAC13HashAlgorithmO":{"name":"HashAlgorithm","abstract":"<p>Enumeration with supported hashing algorithms</p>","parent_name":"ECDSA"},"Classes/ECDSA.html#/s:14AbsioCryptoiOS5ECDSAC11hashingAlgoA2C13HashAlgorithmO_tcfc":{"name":"init(hashingAlgo:)","abstract":"<p>New instance of ECDSA</p>","parent_name":"ECDSA"},"Classes/ECDSA.html#/s:14AbsioCryptoiOS5ECDSAC4sign6digest10privateKey10Foundation4DataVAI_AA09ECPrivateH0CtKF":{"name":"sign(digest:privateKey:)","abstract":"<p>Sign the data with the given private key.</p>","parent_name":"ECDSA"},"Classes/ECDSA.html#/s:14AbsioCryptoiOS5ECDSAC6verify6digest9signature9publicKeySb10Foundation4DataV_AjA08ECPublicI0CtKF":{"name":"verify(digest:signature:publicKey:)","abstract":"<p>Verify signature with the digest and public key.</p>","parent_name":"ECDSA"},"Classes/PBKDF2.html#/s:14AbsioCryptoiOS6PBKDF2C8hashAlgoAcA4HashO_tcfc":{"name":"init(hashAlgo:)","abstract":"<p>Create a KDF2 helper using as the digest algorithm.</p>","parent_name":"PBKDF2"},"Classes/PBKDF2.html#/s:14AbsioCryptoiOS6PBKDF2C18generateDerivedKey8password4salt14iterationCount07derivedG6Length10Foundation4DataVSgAK_AKs5Int32VANtF":{"name":"generateDerivedKey(password:salt:iterationCount:derivedKeyLength:)","abstract":"<p>Generate the derived PBKDF2 key using the password, salt and iteration count.</p>","parent_name":"PBKDF2"},"Classes/PBKDF2Helper.html#/s:14AbsioCryptoiOS12PBKDF2HelperC17decryptFromFormat13formattedData8password14iterationCount10Foundation0J0VAJ_SSSitKF":{"name":"decryptFromFormat(formattedData:password:iterationCount:)","abstract":"<p>This will decrypt data that was encrypted with a PBKDF2 derived key where the data is in the following format:","parent_name":"PBKDF2Helper"},"Classes/PBKDF2Helper.html#/s:14AbsioCryptoiOS12PBKDF2HelperC15encryptToFormat4data4salt8password14iterationCount10Foundation4DataVAK_AKSSSitKF":{"name":"encryptToFormat(data:salt:password:iterationCount:)","abstract":"<p>This will encrypt data with a PBKDF2 derived key and then format the data as follows: salt length + salt + iv","parent_name":"PBKDF2Helper"},"Classes/PBKDF2Helper.html#/s:14AbsioCryptoiOS12PBKDF2HelperC15encryptToFormat4data8password10saltLength14iterationCount10Foundation4DataVAK_SSS2itKF":{"name":"encryptToFormat(data:password:saltLength:iterationCount:)","abstract":"<p>This will encrypt data with a PBKDF2 derived key and then format the data as follows: salt length + salt + iv","parent_name":"PBKDF2Helper"},"Classes/KDF2.html#/s:14AbsioCryptoiOS4KDF2C8hashAlgoAcA4HashO_tcfc":{"name":"init(hashAlgo:)","abstract":"<p>Create a KDF2 helper using as the digest algorithm.</p>","parent_name":"KDF2"},"Classes/KDF2.html#/s:14AbsioCryptoiOS4KDF2C9deriveKey4seed7keySize10Foundation4DataVSgAI_SitF":{"name":"deriveKey(seed:keySize:)","abstract":"<p>Derives secret key from passed value</p>","parent_name":"KDF2"},"Classes/MacHelper/MacAlgorithm.html#/s:14AbsioCryptoiOS9MacHelperC0D9AlgorithmO10HMACSHA384yA2EmF":{"name":"HMACSHA384","abstract":"<p>MARK: Options</p>","parent_name":"MacAlgorithm"},"Classes/MacHelper/MacAlgorithm.html#/s:14AbsioCryptoiOS9MacHelperC0D9AlgorithmO8getIndexs6UInt64VyF":{"name":"getIndex()","abstract":"<p>Get current ineration index</p>","parent_name":"MacAlgorithm"},"Classes/MacHelper/MacAlgorithm.html#/s:14AbsioCryptoiOS9MacHelperC0D9AlgorithmO12getKeyLengthSiyF":{"name":"getKeyLength()","abstract":"<p>Gets key length for given MAC algorithms","parent_name":"MacAlgorithm"},"Classes/MacHelper/MacAlgorithm.html#/s:14AbsioCryptoiOS9MacHelperC0D9AlgorithmO11generateKey10Foundation4DataVyKF":{"name":"generateKey()","abstract":"<p>Generates random Key for given MAC algorithms with given length</p>","parent_name":"MacAlgorithm"},"Classes/MacHelper.html#/s:14AbsioCryptoiOS9MacHelperC0D5ErrorO":{"name":"MacError","abstract":"<p>error enum for MacHelper</p>","parent_name":"MacHelper"},"Classes/MacHelper/MacAlgorithm.html":{"name":"MacAlgorithm","abstract":"<p>This enumeration represents the MAC algorithms that Absio knowingly supports.  By default Absio uses HMACSHA384.</p>","parent_name":"MacHelper"},"Classes/MacHelper.html#/s:14AbsioCryptoiOS9MacHelperC5usingA2C0D9AlgorithmO_tcfc":{"name":"init(using:)","abstract":"<p>Creates a new MacHelper instance with the specified algorithm</p>","parent_name":"MacHelper"},"Classes/MacHelper.html#/s:14AbsioCryptoiOS9MacHelperC14generateDigest4data3key10Foundation4DataVAI_AItF":{"name":"generateDigest(data:key:)","abstract":"<p>Generating digest from data and and key</p>","parent_name":"MacHelper"},"Classes/MacHelper.html#/s:14AbsioCryptoiOS9MacHelperC12verifyDigest6digest4data3keySb10Foundation4DataV_A2JtF":{"name":"verifyDigest(digest:data:key:)","abstract":"<p>Verify generated digest with defined key</p>","parent_name":"MacHelper"},"Classes/MacHelper.html#/s:14AbsioCryptoiOS9MacHelperC10getByIndex5indexAC0D9AlgorithmOs6UInt64V_tKFZ":{"name":"getByIndex(index:)","abstract":"<p>Creates MacHelper instance by given index of algorithm</p>","parent_name":"MacHelper"},"Classes/HMAC/Algorithm.html#/s:14AbsioCryptoiOS4HMACC9AlgorithmO12digestLengthSiyF":{"name":"digestLength()","abstract":"<p>Various lengths for SHA algorithms</p>","parent_name":"Algorithm"},"Classes/HMAC/Algorithm.html":{"name":"Algorithm","abstract":"<p>Defined algorithms for sing HMAC with</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:14AbsioCryptoiOS4HMACC5using3keyA2C9AlgorithmO_10Foundation4DataVtcfc":{"name":"init(using:key:)","abstract":"<p>Creates a new HMAC instance with the specified algorithm and key.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:14AbsioCryptoiOS4HMACC6update4from9byteCountACXD10Foundation4DataV_SitF":{"name":"update(from:byteCount:)","abstract":"<p>Updates the calculation of the HMAC with the contents of a buffer.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:14AbsioCryptoiOS4HMACC5final10Foundation4DataVyF":{"name":"final()","abstract":"<p>Finalizes the HMAC calculation</p>","parent_name":"HMAC"},"Classes/DER.html#/s:14AbsioCryptoiOS3DERC13getPrivateKey4fromAA09ECPrivateG0C10Foundation4DataV_tKFZ":{"name":"getPrivateKey(from:)","abstract":"<p>Parse DER encoded PKCS#8 private key</p>","parent_name":"DER"},"Classes/DER.html#/s:14AbsioCryptoiOS3DERC12getPublicKey4fromAA08ECPublicG0C10Foundation4DataV_tKFZ":{"name":"getPublicKey(from:)","abstract":"<p>Parse DER encoded PKCS#8 public key</p>","parent_name":"DER"},"Classes/DER.html#/s:14AbsioCryptoiOS3DERC12getPublicKey4fromAA08ECPublicG0CSS_tKFZ":{"name":"getPublicKey(from:)","abstract":"<p>Parse DER encoded PKCS#8 public key</p>","parent_name":"DER"},"Classes/PEM.html#/s:14AbsioCryptoiOS3PEMC13getPrivateKey6sourceAA09ECPrivateG0CSS_tKFZ":{"name":"getPrivateKey(source:)","abstract":"<p>Parse PEM encoded PKCS#8 private key</p>","parent_name":"PEM"},"Classes/PEM.html#/s:14AbsioCryptoiOS3PEMC12getPublicKey6sourceAA08ECPublicG0CSS_tKFZ":{"name":"getPublicKey(source:)","abstract":"<p>Parse PEM encoded PKCS#8 public key</p>","parent_name":"PEM"},"Classes/ECPrivateKey.html#/s:14AbsioCryptoiOS12ECPrivateKeyC06publicE0AA08ECPublicE0CyKF":{"name":"publicKey()","abstract":"<p>Derive public EC key from private part</p>","parent_name":"ECPrivateKey"},"Classes/ECPrivateKey.html#/s:14AbsioCryptoiOS12ECPrivateKeyC7keyData10Foundation0G0VSgyF":{"name":"keyData()","abstract":"<p>Private key raw data</p>","parent_name":"ECPrivateKey"},"Classes/ECPrivateKey.html#/s:14AbsioCryptoiOS12ECPrivateKeyC11toPemFormat10Foundation4DataVyF":{"name":"toPemFormat()","abstract":"<p>Converts raw key representation into PKCS#8 format private key in PEM encoding</p>","parent_name":"ECPrivateKey"},"Classes/ECPrivateKey.html#/s:14AbsioCryptoiOS12ECPrivateKeyC11toDerFormat10Foundation4DataVyF":{"name":"toDerFormat()","abstract":"<p>Converts raw key representation into PKCS#8 format private key in DER encoding</p>","parent_name":"ECPrivateKey"},"Classes/ECPublicKey.html#/s:14AbsioCryptoiOS11ECPublicKeyC03rawE7Pointers06OpaqueG0VyF":{"name":"rawKeyPointer()","abstract":"<p>Public key poiner</p>","parent_name":"ECPublicKey"},"Classes/ECPublicKey.html#/s:14AbsioCryptoiOS11ECPublicKeyC09rawPublicE0s13OpaquePointerVSgyF":{"name":"rawPublicKey()","abstract":"<p>Public key poiner</p>","parent_name":"ECPublicKey"},"Classes/ECPublicKey.html#/s:14AbsioCryptoiOS11ECPublicKeyC7keyData10Foundation0G0VSgyF":{"name":"keyData()","abstract":"<p>Public key raw data</p>","parent_name":"ECPublicKey"},"Classes/ECPublicKey.html#/s:14AbsioCryptoiOS11ECPublicKeyC11toDerFormat10Foundation4DataVyF":{"name":"toDerFormat()","abstract":"<p>Converts raw key representation into PKCS#8 format public key in DER encoding</p>","parent_name":"ECPublicKey"},"Classes/ECPublicKey.html#/s:14AbsioCryptoiOS11ECPublicKeyC11toPemFormat10Foundation4DataVyF":{"name":"toPemFormat()","abstract":"<p>Converts raw key representation into PKCS#8 format public key in PEM encoding</p>","parent_name":"ECPublicKey"},"Classes/ECDH.html#/s:14AbsioCryptoiOS4ECDHC8exchange10privateKey06publicG010Foundation4DataVAA09ECPrivateG0C_AA08ECPublicG0CtFZ":{"name":"exchange(privateKey:publicKey:)","abstract":"<p>Generate the Diffie Hellman shared secret with the given private and public keys.</p>","parent_name":"ECDH"},"Classes/KeyFile/KeyFileError.html#/s:14AbsioCryptoiOS7KeyFileC0dE5ErrorO11descriptionSSvp":{"name":"description","abstract":"<p>String description of error</p>","parent_name":"KeyFileError"},"Classes/KeyFile/KeyFileError.html":{"name":"KeyFileError","abstract":"<p>KeyFile errors with correspond desctiption</p>","parent_name":"KeyFile"},"Classes/KeyFile.html#/s:14AbsioCryptoiOS7KeyFileC6userId07signingD0010derivationD003keyE8SettingsAC10Foundation4UUIDV_AA09ECPrivateD0CAlA0deK0Otcfc":{"name":"init(userId:signingKey:derivationKey:keyFileSettings:)","abstract":"<p>Creates new instance of KeyFile. an be used to encrypt KeyRing&rsquo;s and create the KeyFile formatted data or decrypt a KeyRing from the KeyFile formatted data.</p>","parent_name":"KeyFile"},"Classes/KeyFile.html#/s:14AbsioCryptoiOS7KeyFileC05plainD4Ring03keyE8SettingsAcA0dG0V_AA0deI0Otcfc":{"name":"init(plainKeyRing:keyFileSettings:)","abstract":"<p>Creates new instance of KeyFile. an be used to encrypt KeyRing&rsquo;s and create the KeyFile formatted data or decrypt a KeyRing from the KeyFile formatted data.</p>","parent_name":"KeyFile"},"Classes/KeyFile.html#/s:14AbsioCryptoiOS7KeyFileC9encrypted03keyE8SettingsAC10Foundation4DataV_AA0deH0Otcfc":{"name":"init(encrypted:keyFileSettings:)","abstract":"<p>Creates new instance of KeyFile. an be used to encrypt KeyRing&rsquo;s and create the KeyFile formatted data or decrypt a KeyRing from the KeyFile formatted data.</p>","parent_name":"KeyFile"},"Classes/KeyFile.html#/s:14AbsioCryptoiOS7KeyFileC7keyRingAA0dG0VSgvp":{"name":"keyRing","abstract":"<p>Return KeyRing</p>","parent_name":"KeyFile"},"Classes/KeyFile.html#/s:14AbsioCryptoiOS7KeyFileC13getHashedPass4pass13hashAlgorithmS2S_AA4HashOtF":{"name":"getHashedPass(pass:hashAlgorithm:)","abstract":"<p>Get hashed password from given input and Hash algorithm</p>","parent_name":"KeyFile"},"Classes/KeyFile.html#/s:14AbsioCryptoiOS7KeyFileC7encrypt8password10passphrase03keyE8Settings10Foundation4DataVSS_SSAA0deJ0OtKF":{"name":"encrypt(password:passphrase:keyFileSettings:)","abstract":"<p>This will PBKDF2 encrypt the KeyRing using the password. NOTE: the password will first be hashed using that algorithm.","parent_name":"KeyFile"},"Classes/KeyFile.html#/s:14AbsioCryptoiOS7KeyFileC7encrypt8password10passphrase03keyE7Version10Foundation4DataVSS_SSs6UInt64VtKF":{"name":"encrypt(password:passphrase:keyFileVersion:)","abstract":"<p>This will PBKDF2 encrypt the KeyRing using the password. NOTE: the password will first be hashed using that algorithm.","parent_name":"KeyFile"},"Classes/KeyFile.html#/s:14AbsioCryptoiOS7KeyFileC7decrypt8passwordAA0D4RingVSS_tKF":{"name":"decrypt(password:)","abstract":"<p>This will decrypt the KeyRing from the formatted KeyFile data using the password. NOTE: the password will first be hashed using that algorithm, hex encoded</p>","parent_name":"KeyFile"},"Classes/KeyFile.html#/s:14AbsioCryptoiOS7KeyFileC17decryptWithRescue10passphraseAA0D4RingVSS_tKF":{"name":"decryptWithRescue(passphrase:)","abstract":"<p>This will decrypt the KeyRing from the formatted KeyFile data.  First it will decrypt the rescue using the passphrase.  The rescued password will then be used to decrypt the KeyRing.</p>","parent_name":"KeyFile"},"Classes/IndexedECPrivateKey.html#/s:14AbsioCryptoiOS19IndexedECPrivateKeyC02ecF0AA0eF0Cvp":{"name":"ecKey","abstract":"<p>ECPrivateKey itself</p>","parent_name":"IndexedECPrivateKey"},"Classes/IndexedECPrivateKey.html#/s:14AbsioCryptoiOS19IndexedECPrivateKeyC5index02ecF0ACs6UInt64V_AA0eF0Ctcfc":{"name":"init(index:ecKey:)","abstract":"<p>Creates new instance of IndexedECPublicKey</p>","parent_name":"IndexedECPrivateKey"},"Classes/IndexedECPrivateKey.html#/s:14AbsioCryptoiOS19IndexedECPrivateKeyC5index02ecF0ACSi_AA0eF0Ctcfc":{"name":"init(index:ecKey:)","abstract":"<p>Creates new instance of IndexedECPublicKey</p>","parent_name":"IndexedECPrivateKey"},"Classes/IndexedECPrivateKey.html#/s:14AbsioCryptoiOS19IndexedECPrivateKeyC03getd8ECPublicF0AA0dhF0CyKF":{"name":"getIndexedECPublicKey()","abstract":"<p>Derive public EC key from private part</p>","parent_name":"IndexedECPrivateKey"},"Classes/IndexedECPublicKey.html#/s:14AbsioCryptoiOS18IndexedECPublicKeyC02ecF0AA0eF0Cvp":{"name":"ecKey","abstract":"<p>ECPublicKey itself</p>","parent_name":"IndexedECPublicKey"},"Classes/IndexedECPublicKey.html#/s:14AbsioCryptoiOS18IndexedECPublicKeyC5index02ecF0ACs6UInt64V_AA0eF0Ctcfc":{"name":"init(index:ecKey:)","abstract":"<p>Creates new instance of IndexedECPublicKey</p>","parent_name":"IndexedECPublicKey"},"Classes/IndexedECPublicKey.html#/s:14AbsioCryptoiOS18IndexedECPublicKeyC5index02ecF0ACSi_AA0eF0Ctcfc":{"name":"init(index:ecKey:)","abstract":"<p>/// Creates new instance of IndexedECPublicKey</p>","parent_name":"IndexedECPublicKey"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperCACycfc":{"name":"init()","abstract":"<p>Default constructor that will create a helper that uses P384 and AES.KeyStrenght.AES_256 for the curve and key strength respectively.</p>","parent_name":"ECCHelper"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperC11keyStrengthAcA3AESC11KeyStrenghtO_tcfc":{"name":"init(keyStrength:)","abstract":"<p>Constructor that will create a helper that uses the default EC Curve (P384) and AES Key Strength.</p>","parent_name":"ECCHelper"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperC15absioIESDecrypt0E7IESData16signingPublicKey017derivationPrivateJ010Foundation4DataVAJ_AA08ECPublicJ0CAA09ECPrivateJ0CtKF":{"name":"absioIESDecrypt(absioIESData:signingPublicKey:derivationPrivateKey:)","abstract":"<p>This will decrypt the data that was encrypted using Absio&rsquo;s Integrated Encryption Scheme (IES) that utilizes","parent_name":"ECCHelper"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperC15absioIESEncrypt4data17signingPrivateKey016derivationPublicJ06userId06objectN010Foundation4DataVAL_AA016IndexedECPrivateJ0CAA0r8ECPublicJ0CAJ4UUIDVARtKF":{"name":"absioIESEncrypt(data:signingPrivateKey:derivationPublicKey:userId:objectId:)","abstract":"<p>This will encrypt the data using Absio&rsquo;s Integrated Encryption Scheme (IES) that utilizes Elliptical Curve","parent_name":"ECCHelper"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperC19generateDHSharedKey07privateG006publicG010Foundation4DataVSgAA09ECPrivateG0C_AA08ECPublicG0CtF":{"name":"generateDHSharedKey(privateKey:publicKey:)","abstract":"<p>This will return the ECDH shared secret key the private and public key.  If Alice wanted to generate the shared","parent_name":"ECCHelper"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperC22generateDHSharedSecret10privateKey06publicI010Foundation4DataVAA09ECPrivateI0C_AA08ECPublicI0CtF":{"name":"generateDHSharedSecret(privateKey:publicKey:)","abstract":"<p>This will return the ECDH shared secret given the private and public key.","parent_name":"ECCHelper"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperC18generatePrivateKeyAA09ECPrivateG0CyKF":{"name":"generatePrivateKey()","abstract":"<p>Generate P384 private EC key.</p>","parent_name":"ECCHelper"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperC25generateIndexedPrivateKey5indexAA0f9ECPrivateH0CSi_tKF":{"name":"generateIndexedPrivateKey(index:)","abstract":"<p>Generate P384 private EC key with index.</p>","parent_name":"ECCHelper"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperC4sign6digest10privateKey10Foundation4DataVAI_AA09ECPrivateH0CtKF":{"name":"sign(digest:privateKey:)","abstract":"<p>ECDSA signs the given data with the given key. NOTE: this uses SHA384","parent_name":"ECCHelper"},"Classes/ECCHelper.html#/s:14AbsioCryptoiOS9ECCHelperC15verifySignature6digest9signature9publicKeySb10Foundation4DataV_AjA08ECPublicJ0CtKF":{"name":"verifySignature(digest:signature:publicKey:)","abstract":"<p>Verifies a ECDSA signature of the given data. NOTE: this uses SHA384","parent_name":"ECCHelper"},"Classes/AbsioIESHelper/AbsioIESError.html#/s:14AbsioCryptoiOS0A9IESHelperC0A8IESErrorO16invalidSignatureyA2EmF":{"name":"invalidSignature","abstract":"<p>Data signature failed verification</p>","parent_name":"AbsioIESError"},"Classes/AbsioIESHelper/AbsioIESError.html#/s:14AbsioCryptoiOS0A9IESHelperC0A8IESErrorO11descriptionSSvp":{"name":"description","abstract":"<p>Error description as string</p>","parent_name":"AbsioIESError"},"Classes/AbsioIESHelper/AbsioIESError.html":{"name":"AbsioIESError","abstract":"<p>Absio Integrated Encryption Scheme Error enum</p>","parent_name":"AbsioIESHelper"},"Classes/AbsioIESHelper.html#/s:14AbsioCryptoiOS0A9IESHelperC7decrypt4data20derivationPrivateKey013signingPublicI010Foundation4DataVAJ_AA09ECPrivateI0CAA08ECPublicI0CtKFZ":{"name":"decrypt(data:derivationPrivateKey:signingPublicKey:)","abstract":"<p>Decrypt the AbsioIES formatted data.  This will also ensure that the data is properly ECDSA signed as well.</p>","parent_name":"AbsioIESHelper"},"Classes/AbsioIESHelper.html#/s:14AbsioCryptoiOS0A9IESHelperC7encrypt4data17signingPrivateKey016derivationPublicI06userId06objectM010Foundation4DataVAL_AA016IndexedECPrivateI0CAA0q8ECPublicI0CAJ4UUIDVARtKFZ":{"name":"encrypt(data:signingPrivateKey:derivationPublicKey:userId:objectId:)","abstract":"<p>Perform the AbsioIES encryption of the data.</p>","parent_name":"AbsioIESHelper"},"Classes/P384/P384Error.html#/s:14AbsioCryptoiOS4P384C0D5ErrorV11descriptionSSvp":{"name":"description","abstract":"<p>Error description</p>","parent_name":"P384Error"},"Classes/P384/P384Error.html":{"name":"P384Error","abstract":"<p>P384 key generation error</p>","parent_name":"P384"},"Classes/P384.html#/s:14AbsioCryptoiOS4P384C18generatePrivateKeyAA09ECPrivateG0CyKFZ":{"name":"generatePrivateKey()","abstract":"<p>Generate private EC key.</p>","parent_name":"P384"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC7versions6UInt64Vvp":{"name":"version","abstract":"<p>The version of the AbsioIES structure</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC8objectId10Foundation4UUIDVvp":{"name":"objectId","abstract":"<p>The id of the data in the AbsioIES structure</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC18derivationKeyIndexs6UInt64Vvp":{"name":"derivationKeyIndex","abstract":"<p>The index of the derivation key used</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC15signingKeyIndexs6UInt64Vvp":{"name":"signingKeyIndex","abstract":"<p>The index of the signing key used</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC24cipherAlgorithmTypeIndexs6UInt64Vvp":{"name":"cipherAlgorithmTypeIndex","abstract":"<p>The cipher algorithm type index (see AES.Algorithm)</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC25encodedEphemeralPublicKey10Foundation4DataVvp":{"name":"encodedEphemeralPublicKey","abstract":"<p>Trhe public ephemeral key used in the AbsioIES ECDH exchange</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC2iv10Foundation4DataVvp":{"name":"iv","abstract":"<p>The initialization vector used for the encryption portion of the AbsioIES</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC13encryptedData10Foundation0F0Vvp":{"name":"encryptedData","abstract":"<p>The AbsioIES encrypted data</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC9signature10Foundation4DataVvp":{"name":"signature","abstract":"<p>The ECDSA signature (part of AbsioIES)</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC23encodedSigningPublicKey10Foundation4DataVvp":{"name":"encodedSigningPublicKey","abstract":"<p>The signing public key (used to perform the ECDSA portion of AbsioIES)</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC6userId10Foundation4UUIDVvp":{"name":"userId","abstract":"<p>The user&rsquo;s id that performed the AbsioIES (the signer)</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC7version8objectId18derivationKeyIndex07signingiJ0019cipherAlgorithmTypeJ0022encodedEphemeralPublicI02iv13encryptedData9signature0o7SigningqI004userG0ACs6UInt64V_10Foundation4UUIDVA3pQ0T0VA4uStcfc":{"name":"init(version:objectId:derivationKeyIndex:signingKeyIndex:cipherAlgorithmTypeIndex:encodedEphemeralPublicKey:iv:encryptedData:signature:encodedSigningPublicKey:userId:)","abstract":"<p>Create the data structure - Absio Integrated Encryption Scheme with the given values.</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC5parse4dataAC10Foundation4DataV_tFZ":{"name":"parse(data:)","abstract":"<p>This will parse the AbsioIES formatted data into a AbsioIESStruct.</p>","parent_name":"AbsioIESStruct"},"Classes/AbsioIESStruct.html#/s:14AbsioCryptoiOS0A9IESStructC6toData10Foundation0F0VyF":{"name":"toData()","abstract":"<p>Compile AbsioIES structure into Data</p>","parent_name":"AbsioIESStruct"},"Classes/Cipher.html#/s:14AbsioCryptoiOS6CipherC5ErrorO":{"name":"Error","abstract":"<p>error enum for encryption results</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:14AbsioCryptoiOS6CipherC5usingAcA3AESC9AlgorithmO_tcfc":{"name":"init(using:)","abstract":"<p>Creates a Cipher with provided Algorithm</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:14AbsioCryptoiOS6CipherC7decrypt3key2iv4data10Foundation4DataVAJ_A2JtKF":{"name":"decrypt(key:iv:data:)","abstract":"<p>This will decrypt the data using the given key and iv.</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:14AbsioCryptoiOS6CipherC7encrypt3key2iv4data10Foundation4DataVAJ_A2JtKF":{"name":"encrypt(key:iv:data:)","abstract":"<p>This will encrypt the data using the given key and iv.</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:14AbsioCryptoiOS6CipherC11generateKey4size10Foundation4DataVAA3AESC0F8StrenghtO_tF":{"name":"generateKey(size:)","abstract":"<p>This will generate a symmetric key using for determining the size.</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:14AbsioCryptoiOS6CipherC10generateIv10Foundation4DataVyF":{"name":"generateIv()","abstract":"<p>Using the block size of the cipher and the mode of the transformation this will generate an initialization","parent_name":"Cipher"},"Classes/Cipher.html#/s:14AbsioCryptoiOS6CipherC10getByIndex5indexACs6UInt64V_tKFZ":{"name":"getByIndex(index:)","abstract":"<p>Get current iteration index</p>","parent_name":"Cipher"},"Classes/AES/Algorithm.html#/s:14AbsioCryptoiOS3AESC9AlgorithmO11aes_256_ctryA2EmF":{"name":"aes_256_ctr","abstract":"<p>Represents 256 bit AES encryption with CTR mode</p>","parent_name":"Algorithm"},"Classes/AES/Algorithm.html#/s:14AbsioCryptoiOS3AESC9AlgorithmO9getCipherSPySo13evp_cipher_stVGSgyF":{"name":"getCipher()","abstract":"<p>Native pointer to defined cipher</p>","parent_name":"Algorithm"},"Classes/AES/Algorithm.html#/s:14AbsioCryptoiOS3AESC9AlgorithmO12getBlockSizeSiyF":{"name":"getBlockSize()","abstract":"<p>Get the block size of the algorithm.</p>","parent_name":"Algorithm"},"Classes/AES/KeyStrenght.html#/s:14AbsioCryptoiOS3AESC11KeyStrenghtO0D4_256yA2EmF":{"name":"AES_256","abstract":"<p>Represents 256 bit AES encryption.</p>","parent_name":"KeyStrenght"},"Classes/AES/KeyStrenght.html#/s:14AbsioCryptoiOS3AESC11KeyStrenghtO0D4_192yA2EmF":{"name":"AES_192","abstract":"<p>Represents 192 bit AES encryption.</p>","parent_name":"KeyStrenght"},"Classes/AES/KeyStrenght.html#/s:14AbsioCryptoiOS3AESC11KeyStrenghtO0D4_128yA2EmF":{"name":"AES_128","abstract":"<p>Represents 128 bit AES encryption.</p>","parent_name":"KeyStrenght"},"Classes/AES/KeyStrenght.html#/s:14AbsioCryptoiOS3AESC11KeyStrenghtO14getSizeInBytesSiyF":{"name":"getSizeInBytes()","abstract":"<p>Get the key size in bits.</p>","parent_name":"KeyStrenght"},"Classes/AES/KeyStrenght.html":{"name":"KeyStrenght","abstract":"<p>This enumeration represents the AES key sizes that Absio knowingly supports.  By default Absio uses AES256.</p>","parent_name":"AES"},"Classes/AES/Algorithm.html":{"name":"Algorithm","abstract":"<p>This enumeration represents the AES algorithm hat Absio knowingly supports</p>","parent_name":"AES"},"Classes/AES.html":{"name":"AES","abstract":"<p>AES encription with set of Ciphers</p>"},"Classes/Cipher.html":{"name":"Cipher","abstract":"<p>Use this class to assist with cipher key and encryption operations.</p>"},"Classes/AbsioIESStruct.html":{"name":"AbsioIESStruct","abstract":"<p>This class represents that data contained in the Absio Integrated Encryption Scheme (AbsioIES).</p>"},"Classes/P384.html":{"name":"P384","abstract":"<p>This class represent P384 Curve instance</p>"},"Classes/AbsioIESHelper.html":{"name":"AbsioIESHelper","abstract":"<p>This class is used to encrypt and decrypt data using the Absio Integrated Encryption Scheme (AbsioIES)."},"Classes/ECCHelper.html":{"name":"ECCHelper","abstract":"<p>This is a helper class for doing Elliptical Curve Cryptography (AbsioIES) operations.  All of these operations can be"},"Classes/IndexedECPublicKey.html":{"name":"IndexedECPublicKey","abstract":"<p>This class represents a public elliptic curve key with index. It is wrapper"},"Classes/IndexedECPrivateKey.html":{"name":"IndexedECPrivateKey","abstract":"<p>This class represents a private elliptic curve key with index. It is wrapper"},"Classes/KeyFile.html":{"name":"KeyFile","abstract":"<p>This class can be used to encrypt KeyRing&rsquo;s and create the KeyFile formatted data or decrypt a KeyRing from the KeyFile formatted data.</p>"},"Classes/ECDH.html":{"name":"ECDH","abstract":"<p>This class is used to compute the shared secret in a Diffie Hellman key exchange.</p>"},"Classes/ECPublicKey.html":{"name":"ECPublicKey","abstract":"<p>EC Public Key representation</p>"},"Classes/ECPrivateKey.html":{"name":"ECPrivateKey","abstract":"<p>EC Private Key representation</p>"},"Classes/PEM.html":{"name":"PEM","abstract":"<p>Helper class for converting PKCS#8 keys from PEM encoded strings"},"Classes/DER.html":{"name":"DER","abstract":"<p>Helper class for converting PKCS#8 keys from DER encoded strings"},"Classes/HMAC.html":{"name":"HMAC","abstract":"<p>Provides HMAC basic operation with several presets sha256/sha384/sha512</p>"},"Classes/MacHelper.html":{"name":"MacHelper","abstract":"<p>Generating and verifying digest</p>"},"Classes/KDF2.html":{"name":"KDF2","abstract":"<p>Use this class to assist with KDF2 key derivation.</p>"},"Classes/PBKDF2Helper.html":{"name":"PBKDF2Helper","abstract":"<p>This is a helper class to deliver both PBKDF2 key generation and formatted encryption and decryption methods. The"},"Classes/PBKDF2.html":{"name":"PBKDF2","abstract":"<p>Password based key derivation function 2</p>"},"Classes/ECDSA.html":{"name":"ECDSA","abstract":"<p>This class for dealing with Elliptic Curve Digital Signature Algorithm</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}